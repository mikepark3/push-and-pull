/**
 * Module dependencies.
 */


var express = require('express');
var routes = require('./routes');
var user = require('./routes/user');
var http = require('http');
var path = require('path');
//require('date-utils');


var app = express();


// all environments
app.set('port', process.env.PORT || 3000);
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'ejs');
app.use(express.favicon());
app.use(express.logger('dev'));
app.use(express.json());
app.use(express.urlencoded());
app.use(express.methodOverride());
////////////////////////////////////////////////////
app.use(express.cookieParser('SAMPLE'));
app.use(express.session( {
    key : 'sid',
    secret : 'SAMPLE',       // my secret string
    maxAge: 3600000
}));


// view 의 local에서 session 을 일괄적으로 사용할수 있도록 지원
app.use( function(req, res, next) {
    res.locals.session = req.session;
    if (req.session.used == null)
    {


        req.session.used = true;
        dt = new Date();
        req.session.t = dt;
    }
    next();
});




app.use(app.router);
app.use(express.static(path.join(__dirname, 'public')));


// development only
if ('development' == app.get('env')) {
  app.use(express.errorHandler());
}


//app.get('/', routes.index);
//app.get('/users', user.list);


app.get('/', function(req, res, next) {
    console.log(req.session);
    res.writeHead(200, {"Content-Type": "text/plain"});
    res.end("ok");


});




http.createServer(app).listen(app.get('port'), function(){
  console.log('Express server listening on port ' + app.get('port'));
});

